!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function r(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?t(Object(n),!0).forEach((function(t){var r,i,u;r=e,i=t,u=n[t],(i=o(i))in r?Object.defineProperty(r,i,{value:u,enumerable:!0,configurable:!0,writable:!0}):r[i]=u})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):t(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function n(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,o(n.key),n)}}function o(t){var r=function(t,r){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!=e(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(r)?r:r+""}var i=new(function(){return e=function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t,this.headers=r},(t=[{key:"getUserInfo",value:function(){return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error:",e)}))}},{key:"getInitialCards",value:function(){return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error:",e)}))}},{key:"modifyUsersInfo",value:function(e,t){return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:r(r({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:e,about:t})}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error:",e)}))}},{key:"getNewCard",value:function(e,t){return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:r(r({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({name:e,link:t})}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error:",e)}))}},{key:"likeCard",value:function(e,t){var r=t?"PUT":"DELETE";return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:r,headers:this.headers}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){console.error("Error: can't apply like",e)}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error:",e)}))}},{key:"resetAvatar",value:function(e){return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:r(r({},this.headers),{},{"Content-Type":"application/json"}),body:JSON.stringify({avatar:e})}).then((function(e){if(!e.ok)throw new Error("Server error: ".concat(e.status));return e.json()})).catch((function(e){return console.error("Error:",e)}))}}])&&n(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}())("https://around.nomoreparties.co/v1/web_es_12",{authorization:"39689808-444a-43ae-b51c-8f177d6060a9"});function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,a(n.key),n)}}function a(e){var t=function(e,t){if("object"!=u(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=u(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==u(t)?t:t+""}var l=function(){return e=function e(t,r,n,o,i){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.name,this._link=t.link,this._likes=Array.isArray(t.likes)?t.likes:[],this._cardId=t._id,this._templateSelector=r,this._element=this._getTemplate(),this._element.id=this._cardId,this._cardImage=this._element.querySelector(".card__photo"),this._cardTitle=this._element.querySelector(".card__info-name"),this._likeButton=this._element.querySelector(".card__like-button"),this._counterLikes=this._element.querySelector(".card__likes"),this._currentUser=n,this._handleCardLike=o,this._handleCardDelete=i,this._ownerId=t.owner._id,this._bindListeners(),this._updateLikeStatus()},t=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_bindListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLike()})),this._cardImage.addEventListener("click",(function(){return e._handleImageClick()})),this._currentUser===this._ownerId&&this._element.querySelector(".card__delete-button").addEventListener("click",(function(){return e._handleDelete()}))}},{key:"_handleLike",value:function(){var e=this,t=!this._likes.some((function(t){return t._id===e._currentUser}));this._toggleLike(t)}},{key:"_toggleLike",value:function(e){var t=this;this._handleCardLike(this._cardId,e).then((function(e){if(!Array.isArray(e.likes))throw new Error("Invalid updated likes: not an array");t._likes=e.likes,t._updateLikeStatus()})).catch((function(e){console.error("Error toggling like: ".concat(e))}))}},{key:"_handleDelete",value:function(){var e=this;i.deleteCard(this._cardId).then((function(){e._element.remove()})).catch((function(e){return console.error("Error:",e)}))}},{key:"_handleImageClick",value:function(){var e=this,t=document.querySelector("#popup_image-open"),r=document.querySelector("#popup__close-image"),n=document.querySelector(".popup__image-title"),o=document.querySelector(".popup__image"),i=document.querySelector("#popup-overlay-image");o.src=this._link,n.textContent=this._title,o.alt=this._title,t.classList.add("popup_opened"),r.addEventListener("click",(function(){t.classList.remove("popup_opened"),i.removeEventListener("click",e._handleOverlayClick)})),i.addEventListener("click",(function(){t.classList.remove("popup_opened"),i.removeEventListener("click",e._handleOverlayClick)}))}},{key:"_updateLikeStatus",value:function(){var e=this;Array.isArray(this._likes)&&(this._likes.some((function(t){return t._id===e._currentUser}))?this._likeButton.classList.add("card__like-button_active"):this._likeButton.classList.remove("card__like-button_active"),this._counterLikes.textContent=this._likes.length)}},{key:"generateCard",value:function(){return this._cardTitle.textContent=this._title,this._cardImage.src=this._link,this._cardImage.alt=this._title,this._updateLikeStatus(),this._element}}],t&&c(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function p(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,f(n.key),n)}}function f(e){var t=function(e,t){if("object"!=s(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=s(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==s(t)?t:t+""}var y=function(){return e=function e(t,r){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._formSelector=r.formSelector,this._inputSelector=r.inputSelector,this._submitButtonSelector=r.submitButtonSelector,this._inactiveButtonClass=r.inactiveButtonClass,this._inputErrorClass=r.inputErrorClass,this._errorClass=r.errorClass,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this.inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._setEventListeners()},(t=[{key:"_showInputError",value:function(e,t){e.classList.add(this._inputErrorClass),this._formElement.querySelector("#".concat(e.id,"-error")).textContent=t}},{key:"_hideInputError",value:function(e){e.classList.remove(this._inputErrorClass),this._formElement.querySelector("#".concat(e.id,"-error")).textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this.inputList)?this._buttonElement.classList.add(this._inactiveButtonClass):this._buttonElement.classList.remove(this._inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._toggleButtonState()}}])&&p(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function d(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function h(e){var t=function(e,t){if("object"!=v(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=v(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==v(t)?t:t+""}var m=function(){return e=function e(t,r){var n=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=n,this._renderer=o,this._cardsSelector=r},(t=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._cardsSelector.prepend(e)}}])&&d(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function _(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,S(n.key),n)}}function S(e){var t=function(e,t){if("object"!=b(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=b(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==b(t)?t:t+""}var g=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupSelector=document.querySelector(t),this.popupCloseButton=this.popupSelector.querySelector(".popup__close-button")},(t=[{key:"open",value:function(){this.popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose.bind(this))}},{key:"close",value:function(){this.popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClick",value:function(e){return e.target.classList.contains("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this.popupCloseButton.addEventListener("click",(function(){e.close()})),this.popupSelector.addEventListener("click",(function(t){t.target===e.popupSelector&&e.close()}))}}])&&_(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function w(e){return w="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},w(e)}function k(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,E(n.key),n)}}function E(e){var t=function(e,t){if("object"!=w(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=w(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==w(t)?t:t+""}function O(e,t,r){return t=P(t),function(e,t){if(t&&("object"===w(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,j()?Reflect.construct(t,r||[],P(e).constructor):t.apply(e,r))}function j(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(j=function(){return!!e})()}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=P(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},L.apply(this,arguments)}function P(e){return P=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},P(e)}function C(e,t){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},C(e,t)}var q=function(e){function t(e,r){var n,o=r.handleFormAvatar;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=O(this,t,[e])).handleFormAvatar=o,n._buttonAvatar=n.popupSelector.querySelector("#popup-avatar__close"),n._spanError=n.popupSelector.querySelector("#popup__input_avatar-error"),n.formAvatar=n.popupSelector.querySelector("#popup-avatar__form"),n.buttonSaveAvatar=n.popupSelector.querySelector("#popup-avatar__button"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&C(e,t)}(t,e),r=t,(n=[{key:"open",value:function(){L(P(t.prototype),"open",this).call(this),this.setEventListeners()}},{key:"setEventListeners",value:function(){L(P(t.prototype),"setEventListeners",this).call(this),this._buttonAvatar.addEventListener("click",(function(e){e.preventDefault()}))}},{key:"close",value:function(){L(P(t.prototype),"close",this).call(this),this.formAvatar.reset()}}])&&k(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(g);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,B(n.key),n)}}function B(e){var t=function(e,t){if("object"!=I(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=I(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==I(t)?t:t+""}function D(e,t,r){return t=R(t),function(e,t){if(t&&("object"===I(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,A()?Reflect.construct(t,r||[],R(e).constructor):t.apply(e,r))}function A(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(A=function(){return!!e})()}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=R(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},x.apply(this,arguments)}function R(e){return R=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},R(e)}function U(e,t){return U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},U(e,t)}var N=function(e){function t(e,r){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=D(this,t,[e])).handleFormSubmit=r,n.form=n.popupSelector.querySelector(".popup__form"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&U(e,t)}(t,e),r=t,(n=[{key:"_getInputValues",value:function(){return{name:this.popupSelector.querySelector(".popup__input_title").value,link:this.popupSelector.querySelector("#popup__input_image").value}}},{key:"setEventListeners",value:function(){var e=this;x(R(t.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(t)}))}},{key:"close",value:function(){x(R(t.prototype),"close",this).call(this),this.form.reset()}}])&&T(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(g);function F(e){return F="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},F(e)}function J(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,V(n.key),n)}}function V(e){var t=function(e,t){if("object"!=F(e)||!e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=F(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==F(t)?t:t+""}function H(e,t,r){return t=G(t),function(e,t){if(t&&("object"===F(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,z()?Reflect.construct(t,r||[],G(e).constructor):t.apply(e,r))}function z(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(z=function(){return!!e})()}function M(){return M="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=G(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(arguments.length<3?e:r):o.value}},M.apply(this,arguments)}function G(e){return G=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},G(e)}function K(e,t){return K=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},K(e,t)}var Q,W=function(e){function t(e){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=H(this,t,[e])).image=r.popupSelector.querySelector(".popup__image"),r.title=r.popupSelector.querySelector(".popup__image-title"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&K(e,t)}(t,e),r=t,(n=[{key:"open",value:function(e,r){M(G(t.prototype),"open",this).call(this),this.image.src=e,this.title.textContent=r}}])&&J(r.prototype,n),Object.defineProperty(r,"prototype",{writable:!1}),r;var r,n}(g),X=document.querySelector(".profile__avatar"),Y=document.querySelector(".profile__name"),Z=document.querySelector(".profile__about"),$=document.querySelector(".profile__edit-button"),ee=document.querySelector(".popup__form"),te=document.querySelector("#form-cards"),re=document.querySelector(".popup__input_name"),ne=document.querySelector(".popup__input_about"),oe=document.querySelector(".profile__add-button"),ie=document.querySelector(".popup__input_title"),ue=document.querySelector("#popup__input_image"),ce=document.querySelector(".cards"),ae=document.getElementById("add-image-popup").querySelector(".popup__form"),le=document.querySelector(".profile__edit-icon"),se=document.querySelector("#popup-avatar__form"),pe=document.querySelector("#popup-avatar__button"),fe=document.querySelector("#popup-profile__button"),ye=document.querySelector("#popup-card__button");function ve(e){e.preventDefault();var t=re.value,r=ne.value;fe.textContent="Saving...",i.modifyUsersInfo(t,r).then((function(e){Y.textContent=null==e?void 0:e.name,Z.textContent=null==e?void 0:e.about,me.close()})).catch((function(e){console.error(e)})).finally((function(){fe.textContent="Save"}))}i.getUserInfo().then((function(e){Y.textContent=null==e?void 0:e.name,Z.textContent=null==e?void 0:e.about,X.src=null==e?void 0:e.avatar,Q=null==e?void 0:e._id,i.getInitialCards().then((function(e){var t=new m({items:e,renderer:function(e){var r=new l(e,".template-card",Q,Oe,je).generateCard();t.addItem(r)}},ce);t.render()}))}));var de=new g(".popup"),he=new N("#add-image-popup",(function(e){e.preventDefault(),he.close()})),me=new N(".popup",ve),be=new W("#popup_image-open"),_e=new q("#popup-avatar",{handleFormAvatar:Ee}),Se=document.querySelector("#popup-overlay-edit"),ge=document.querySelector("#popup-overlay-add"),we=document.querySelector("#popup-overlay-image"),ke=document.querySelector("#popup-overlay-avatar");function Ee(e){e.preventDefault();var t=se.querySelector(".popup__input").value;pe.textContent="Saving...",i.resetAvatar(t).then((function(e){X.src=null==e?void 0:e.avatar,_e.close(),pe.textContent="Save"}))}function Oe(e,t){return i.likeCard(e,t).then((function(e){return e})).catch((function(e){throw e}))}function je(e){i.deleteCard(e).then((function(){document.getElementById(e).remove()}))}function Le(e){e.target.classList.contains("popup__overlay")&&(de.close(),he.close(),be.close(),_e.close())}function Pe(e){"Escape"===e.key&&(de.close(),he.close(),be.close(),_e.close(),document.removeEventListener("keydown",Pe))}$.addEventListener("click",(function(){de.open(),i.getUserInfo().then((function(e){re.value=null==e?void 0:e.name,ne.value=null==e?void 0:e.about}))})),ee.addEventListener("submit",ve),oe.addEventListener("click",(function(){return he.open()})),ae.addEventListener("submit",(function(e){e.preventDefault(),ye.textContent="Saving...",ie.value&&ue.value&&i.getNewCard(ie.value,ue.value).then((function(e){var t=new l(e,".template-card",Q,Oe,je).generateCard();ce.prepend(t),ie.value="",ue.value="",he.close(),ye.textContent="Save"}))})),le.addEventListener("click",(function(){return _e.open()})),se.addEventListener("submit",Ee),he.setEventListeners(),Se.addEventListener("click",Le),ge.addEventListener("click",Le),we.addEventListener("click",Le),ke.addEventListener("click",Le),document.addEventListener("keydown",(function(e){return Pe(e)}));var Ce={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};new y(ee,Ce)._setEventListeners(),new y(te,Ce)._setEventListeners(),new y(se,Ce)._setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,