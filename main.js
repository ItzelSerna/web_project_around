!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,n(r.key),r)}}function n(t){var n=function(t,n){if("object"!=e(t)||!t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var r=o.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var o=function(){return e=function e(t,n,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._title=t.name,this._link=t.link,this._templateSelector=n,this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".card__photo"),this._cardTitle=this._element.querySelector(".card__info-name"),this._likeButton=this._element.querySelector(".card__like-button"),this._deleteButton=this._element.querySelector(".card__delete-button"),this._bindListeners(),this._handleOpenImage=o},n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".card").cloneNode(!0)}},{key:"_bindListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLike()})),this._deleteButton.addEventListener("click",(function(){return e._handleDelete()})),this._cardImage.addEventListener("click",(function(){return e._handleImageClick()}))}},{key:"_handleLike",value:function(){this._likeButton.classList.toggle("card__like-button_active")}},{key:"_handleDelete",value:function(){this._element.remove()}},{key:"_handleImageClick",value:function(){var e=this,t=document.querySelector("#popup_image-open"),n=document.querySelector("#popup__close-image"),o=document.querySelector(".popup__image-title"),r=document.querySelector(".popup__image"),i=document.querySelector("#popup-overlay-image");r.src=this._link,o.textContent=this._title,r.alt=this._title,t.classList.add("popup_opened"),n.addEventListener("click",(function(){t.classList.remove("popup_opened"),i.removeEventListener("click",e._handleOverlayClick)})),i.addEventListener("click",(function(){t.classList.remove("popup_opened"),i.removeEventListener("click",e._handleOverlayClick)}))}},{key:"generateCard",value:function(){return this._cardTitle.textContent=this._title,this._cardImage.src=this._link,this._cardImage.alt=this._title,this._element}}],n&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}();function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,u(o.key),o)}}function u(e){var t=function(e,t){if("object"!=r(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==r(t)?t:t+""}var c=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._formSelector=n.formSelector,this._inputSelector=n.inputSelector,this._submitButtonSelector=n.submitButtonSelector,this._inactiveButtonClass=n.inactiveButtonClass,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this.inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._setEventListeners()},(t=[{key:"_showInputError",value:function(e,t){e.classList.add(this._inputErrorClass),this._formElement.querySelector("#".concat(e.id,"-error")).textContent=t}},{key:"_hideInputError",value:function(e){e.classList.remove(this._inputErrorClass),this._formElement.querySelector("#".concat(e.id,"-error")).textContent=""}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}},{key:"_hasInvalidInput",value:function(){return this.inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput(this.inputList)?this._buttonElement.classList.add(this._inactiveButtonClass):this._buttonElement.classList.remove(this._inactiveButtonClass)}},{key:"_setEventListeners",value:function(){var e=this;this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this.inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))})),this._toggleButtonState()}}])&&i(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function a(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,p(o.key),o)}}function p(e){var t=function(e,t){if("object"!=l(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=l(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==l(t)?t:t+""}var s=function(){return e=function e(t,n){var o=t.items,r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=o,this._renderer=r,this._cardsSelector=n},(t=[{key:"render",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._cardsSelector.prepend(e)}}])&&a(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function y(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,m(o.key),o)}}function m(e){var t=function(e,t){if("object"!=f(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=f(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==f(t)?t:t+""}var d=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.popupSelector=document.querySelector(t),this.popupCloseButton=this.popupSelector.querySelector(".popup__close-button")},(t=[{key:"open",value:function(){this.popupSelector.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose.bind(this))}},{key:"close",value:function(){this.popupSelector.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose.bind(this))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"_handleOverlayClick",value:function(e){return e.target.classList.contains("popup_opened")}},{key:"setEventListeners",value:function(){var e=this;this.popupCloseButton.addEventListener("click",(function(){e.close()})),this.popupSelector.addEventListener("click",(function(t){t.target===e.popupSelector&&e.close()}))}}])&&y(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function b(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,h(o.key),o)}}function h(e){var t=function(e,t){if("object"!=v(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=v(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==v(t)?t:t+""}function _(e,t,n){return t=g(t),function(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,S()?Reflect.construct(t,n||[],g(e).constructor):t.apply(e,n))}function S(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(S=function(){return!!e})()}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=g(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},w.apply(this,arguments)}function g(e){return g=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},g(e)}function E(e,t){return E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},E(e,t)}var k=function(e){function t(e,n){var o;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(o=_(this,t,[e])).handleFormSubmit=n,o.form=o.popupSelector.querySelector(".popup__form"),o}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&E(e,t)}(t,e),n=t,(o=[{key:"_getInputValues",value:function(){return{name:this.popupSelector.querySelector(".popup__input_title").value,link:this.popupSelector.querySelector("#popup__input_image").value}}},{key:"setEventListeners",value:function(){var e=this;w(g(t.prototype),"setEventListeners",this).call(this),this.form.addEventListener("submit",(function(t){t.preventDefault(),e.handleFormSubmit(t)}))}},{key:"close",value:function(){w(g(t.prototype),"close",this).call(this),this.form.reset()}}])&&b(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(d);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function L(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,O(o.key),o)}}function O(e){var t=function(e,t){if("object"!=j(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=j(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==j(t)?t:t+""}function x(e,t,n){return t=C(t),function(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,q()?Reflect.construct(t,n||[],C(e).constructor):t.apply(e,n))}function q(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(q=function(){return!!e})()}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var o=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},P.apply(this,arguments)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}var D=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=x(this,t,[e])).image=n.popupSelector.querySelector(".popup__image"),n.title=n.popupSelector.querySelector(".popup__image-title"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(t,e),n=t,(o=[{key:"open",value:function(e,n){P(C(t.prototype),"open",this).call(this),this.image.src=e,this.title.textContent=n}}])&&L(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,o}(d);function I(e){return I="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},I(e)}function T(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,M(o.key),o)}}function M(e){var t=function(e,t){if("object"!=I(e)||!e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var o=n.call(e,"string");if("object"!=I(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==I(t)?t:t+""}var H=function(){return e=function e(t,n){var o=t.nameSelector,r=t.jobSelector;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._nameSelector=o,this._jobSelector=r,this._popupSelector=n},(t=[{key:"getUserInfo",value:function(){return{name:this._nameSelector.textContent,job:this._jobSelector.textContent}}},{key:"setUserInfo",value:function(){this._nameSelector.textContent=this._popupSelector.querySelector(".popup__input_name").value,this._jobSelector.textContent=this._popupSelector.querySelector(".popup__input_about").value}}])&&T(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();document.getElementById("profile-avatar").src="e7d376649aca6b620fcf.jpg";var A=document.querySelector(".profile__name"),R=document.querySelector(".profile__about"),G=document.querySelector(".profile__edit-button"),V=document.querySelector(".popup"),Y=document.querySelector(".popup__form"),W=document.querySelector("#form-cards"),U=document.querySelector(".popup__input_name"),F=document.querySelector(".popup__input_about"),N=document.querySelector(".profile__add-button"),z=document.querySelector(".popup__input_title"),J=document.querySelector("#popup__input_image"),K=document.querySelector(".cards"),Q=document.getElementById("add-image-popup").querySelector(".popup__form"),X=new H({nameSelector:A,jobSelector:R},V),Z=new s({items:[{name:"Montañas Rocosas",link:"https://images.unsplash.com/photo-1595134816826-c569cbb602b2?q=80&w=1436&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Lago di Braies",link:"https://images.unsplash.com/photo-1581520734619-86fbd0a3d083?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Yosemite",link:"https://images.unsplash.com/photo-1607400371388-14ea99d7d096?q=80&w=1470&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Everglades",link:"https://images.unsplash.com/photo-1592947419095-4a2b4bde9161?q=80&w=1462&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Hawái",link:"https://images.unsplash.com/photo-1542309174-d33b34ce6ea7?q=80&w=1376&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"},{name:"Lago Michigan",link:"https://images.unsplash.com/photo-1562878344-85f7b6243c5f?q=80&w=1374&auto=format&fit=crop&ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D"}],renderer:function(e){var t=new o(e,".template-card").generateCard();Z.addItem(t)}},K);Z.render();var $=new d(".popup"),ee=new k("#add-image-popup",(function(e){e.preventDefault(),ee.close()})),te=new k(".popup",ue),ne=new D("#popup_image-open"),oe=document.querySelector("#popup-overlay-edit"),re=document.querySelector("#popup-overlay-add"),ie=document.querySelector("#popup-overlay-image");function ue(e){e.preventDefault(),X.setUserInfo(),te.close()}function ce(e){e.target.classList.contains("popup__overlay")&&($.close(),ee.close(),ne.close())}function le(e){"Escape"===e.key&&($.close(),ee.close(),ne.close(),document.removeEventListener("keydown",le))}G.addEventListener("click",(function(){var e,t,n;$.open(),t=(e=X.getUserInfo()).name,n=e.job,U.value=t,F.value=n})),Y.addEventListener("submit",ue),N.addEventListener("click",(function(){return ee.open()})),Q.addEventListener("submit",(function(e){if(e.preventDefault(),z.value&&J.value){var t=new o({name:z.value,link:J.value},".template-card").generateCard();K.prepend(t),z.value="",J.value="",ee.close()}})),ee.setEventListeners(),oe.addEventListener("click",ce),re.addEventListener("click",ce),ie.addEventListener("click",ce),document.addEventListener("keydown",(function(e){return le(e)}));var ae={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};new c(Y,ae)._setEventListeners(),new c(W,ae)._setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUNGLElBa0NBOEMsR0FBY2Msb0JBRWRWLEdBQVk1SCxpQkFBaUIsUUFBUytILElBQ3RDRixHQUFXN0gsaUJBQWlCLFFBQVMrSCxJQUNyQ25ILEdBQWFaLGlCQUFpQixRQUFTK0gsSUFFdkNuSSxTQUFTSSxpQkFBaUIsV0FBVyxTQUFDZ0ksR0FBSyxPQUFLQyxHQUFhRCxFQUFNLElBRW5FLElBQU0zRyxHQUFXLENBQ2ZHLGFBQWMsZUFDZEUsY0FBZSxnQkFDZkUscUJBQXNCLHNCQUN0QkUsb0JBQXFCLHlCQUNyQkUsZ0JBQWlCLDBCQUNqQkUsV0FBWSx3QkFHYyxJQUFJZixFQUFjQyxFQUFhQyxJQUN2Q21CLHFCQUNLLElBQUlyQixFQUFjc0YsRUFBaUJwRixJQUMzQ21CLG9CIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3NjcmlwdHMvQ2FyZC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvc2NyaXB0cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0X2Fyb3VuZC8uL3NyYy9zY3JpcHRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3NjcmlwdHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfYXJvdW5kLy4vc3JjL3NjcmlwdHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvc2NyaXB0cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvc2NyaXB0cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF9hcm91bmQvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoY2FyZERhdGEsIHRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZU9wZW5JbWFnZSkge1xyXG4gICAgdGhpcy5fdGl0bGUgPSBjYXJkRGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fbGluayA9IGNhcmREYXRhLmxpbms7XHJcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3Bob3RvXCIpO1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2luZm8tbmFtZVwiKTtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fbGlrZS1idXR0b25cIik7XHJcbiAgICB0aGlzLl9kZWxldGVCdXR0b24gPSB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcclxuICAgIHRoaXMuX2JpbmRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2hhbmRsZU9wZW5JbWFnZSA9IGhhbmRsZU9wZW5JbWFnZTtcclxuICB9XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnN0IGNhcmRUZW1wbGF0ZSA9IGRvY3VtZW50XHJcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpXHJcbiAgICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKTtcclxuICAgIHJldHVybiBjYXJkVGVtcGxhdGUuY2xvbmVOb2RlKHRydWUpO1xyXG4gIH1cclxuXHJcbiAgX2JpbmRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLl9saWtlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVMaWtlKCkpO1xyXG4gICAgdGhpcy5fZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVEZWxldGUoKSk7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHRoaXMuX2hhbmRsZUltYWdlQ2xpY2soKSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlTGlrZSgpIHtcclxuICAgIHRoaXMuX2xpa2VCdXR0b24uY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVEZWxldGUoKSB7XHJcbiAgICB0aGlzLl9lbGVtZW50LnJlbW92ZSgpO1xyXG4gIH1cclxuXHJcbiAgX2hhbmRsZUltYWdlQ2xpY2soKSB7XHJcbiAgICBjb25zdCBwb3B1cEltYWdlT3BlbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9wdXBfaW1hZ2Utb3BlblwiKTtcclxuICAgIGNvbnN0IGNsb3NlSW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwX19jbG9zZS1pbWFnZVwiKTtcclxuICAgIGNvbnN0IHBvcHVwSW1hZ2VUaXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlLXRpdGxlXCIpO1xyXG4gICAgY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xyXG4gICAgY29uc3Qgb3ZlcmxheUltYWdlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cC1vdmVybGF5LWltYWdlXCIpO1xyXG5cclxuICAgIHBvcHVwSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHBvcHVwSW1hZ2VUaXRsZS50ZXh0Q29udGVudCA9IHRoaXMuX3RpdGxlO1xyXG4gICAgcG9wdXBJbWFnZS5hbHQgPSB0aGlzLl90aXRsZTtcclxuICAgIHBvcHVwSW1hZ2VPcGVuLmNsYXNzTGlzdC5hZGQoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICBjbG9zZUltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHBvcHVwSW1hZ2VPcGVuLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICAgIG92ZXJsYXlJbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlT3ZlcmxheUNsaWNrKTtcclxuICAgIH0pO1xyXG4gICAgb3ZlcmxheUltYWdlLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHBvcHVwSW1hZ2VPcGVuLmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcGVuZWRcIik7XHJcbiAgICAgIG92ZXJsYXlJbWFnZS5yZW1vdmVFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5faGFuZGxlT3ZlcmxheUNsaWNrKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZ2VuZXJhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fY2FyZFRpdGxlLnRleHRDb250ZW50ID0gdGhpcy5fdGl0bGU7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl90aXRsZTtcclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihmb3JtRWxlbWVudCwgc2V0dGluZ3MpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50ID0gZm9ybUVsZW1lbnQ7XHJcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBzZXR0aW5ncy5mb3JtU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbnB1dFNlbGVjdG9yID0gc2V0dGluZ3MuaW5wdXRTZWxlY3RvcjtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gc2V0dGluZ3MuaW5hY3RpdmVCdXR0b25DbGFzcztcclxuICAgIHRoaXMuX2lucHV0RXJyb3JDbGFzcyA9IHNldHRpbmdzLmlucHV0RXJyb3JDbGFzcztcclxuICAgIHRoaXMuX2Vycm9yQ2xhc3MgPSBzZXR0aW5ncy5lcnJvckNsYXNzO1xyXG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudCA9IHRoaXMuX2Zvcm1FbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yXHJcbiAgICApO1xyXG4gICAgdGhpcy5pbnB1dExpc3QgPSBBcnJheS5mcm9tKFxyXG4gICAgICB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yQWxsKHRoaXMuX2lucHV0U2VsZWN0b3IpXHJcbiAgICApO1xyXG5cclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IoaW5wdXRFbGVtZW50LCBlcnJvck1lc3NhZ2UpIHtcclxuICAgIGlucHV0RWxlbWVudC5jbGFzc0xpc3QuYWRkKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBgIyR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmBcclxuICAgICk7XHJcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBlcnJvck1lc3NhZ2U7XHJcbiAgfVxyXG5cclxuICBfaGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gICAgY29uc3QgZXJyb3JFbGVtZW50ID0gdGhpcy5fZm9ybUVsZW1lbnQucXVlcnlTZWxlY3RvcihcclxuICAgICAgYCMke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgXHJcbiAgICApO1xyXG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gXCJcIjtcclxuICB9XHJcblxyXG4gIF9jaGVja0lucHV0VmFsaWRpdHkoaW5wdXRFbGVtZW50KSB7XHJcbiAgICBpZiAoIWlucHV0RWxlbWVudC52YWxpZGl0eS52YWxpZCkge1xyXG4gICAgICB0aGlzLl9zaG93SW5wdXRFcnJvcihpbnB1dEVsZW1lbnQsIGlucHV0RWxlbWVudC52YWxpZGF0aW9uTWVzc2FnZSk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9oaWRlSW5wdXRFcnJvcihpbnB1dEVsZW1lbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2hhc0ludmFsaWRJbnB1dCgpIHtcclxuICAgIHJldHVybiB0aGlzLmlucHV0TGlzdC5zb21lKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIF90b2dnbGVCdXR0b25TdGF0ZSgpIHtcclxuICAgIGlmICh0aGlzLl9oYXNJbnZhbGlkSW5wdXQodGhpcy5pbnB1dExpc3QpKSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX2Zvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuaW5wdXRMaXN0LmZvckVhY2goKGVsKSA9PiB7XHJcbiAgICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XHJcbiAgICAgICAgdGhpcy5fY2hlY2tJbnB1dFZhbGlkaXR5KGVsKTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25TdGF0ZSgpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX3RvZ2dsZUJ1dHRvblN0YXRlKCk7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNlY3Rpb24ge1xyXG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNhcmRzU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX2l0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5fY2FyZHNTZWxlY3RvciA9IGNhcmRzU2VsZWN0b3I7XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKSB7XHJcbiAgICB0aGlzLl9pdGVtcy5mb3JFYWNoKChpdGVtKSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBhZGRJdGVtKGVsZW1lbnQpIHtcclxuICAgIHRoaXMuX2NhcmRzU2VsZWN0b3IucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMucG9wdXBTZWxlY3RvciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLnBvcHVwQ2xvc2VCdXR0b24gPSB0aGlzLnBvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucG9wdXBfX2Nsb3NlLWJ1dHRvblwiXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgb3BlbigpIHtcclxuICAgIHRoaXMucG9wdXBTZWxlY3Rvci5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMucG9wdXBTZWxlY3Rvci5jbGFzc0xpc3QucmVtb3ZlKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XHJcbiAgICBpZiAoZXZ0LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlT3ZlcmxheUNsaWNrKGV2dCkge1xyXG4gICAgcmV0dXJuIGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwicG9wdXBfb3BlbmVkXCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICB0aGlzLnBvcHVwQ2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSk7XHJcblxyXG4gICAgdGhpcy5wb3B1cFNlbGVjdG9yLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGlmIChldnQudGFyZ2V0ID09PSB0aGlzLnBvcHVwU2VsZWN0b3IpIHtcclxuICAgICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXBcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLmhhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5mb3JtID0gdGhpcy5wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIik7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLnBvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdGl0bGVcIikudmFsdWUsXHJcbiAgICAgIGxpbms6IHRoaXMucG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwX19pbnB1dF9pbWFnZVwiKS52YWx1ZSxcclxuICAgIH07XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLmZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB0aGlzLmhhbmRsZUZvcm1TdWJtaXQoZXZ0KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgY2xvc2UoKSB7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gICAgdGhpcy5mb3JtLnJlc2V0KCk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cFwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLmltYWdlID0gdGhpcy5wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2ltYWdlXCIpO1xyXG4gICAgdGhpcy50aXRsZSA9IHRoaXMucG9wdXBTZWxlY3Rvci5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbWFnZS10aXRsZVwiKTtcclxuICB9XHJcblxyXG4gIG9wZW4oaW1hZ2VTcmMsIHRpdGxlVGV4dCkge1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gICAgdGhpcy5pbWFnZS5zcmMgPSBpbWFnZVNyYztcclxuICAgIHRoaXMudGl0bGUudGV4dENvbnRlbnQgPSB0aXRsZVRleHQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWVTZWxlY3Rvciwgam9iU2VsZWN0b3IgfSwgcG9wdXBTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fbmFtZVNlbGVjdG9yID0gbmFtZVNlbGVjdG9yO1xyXG4gICAgdGhpcy5fam9iU2VsZWN0b3IgPSBqb2JTZWxlY3RvcjtcclxuICAgIHRoaXMuX3BvcHVwU2VsZWN0b3IgPSBwb3B1cFNlbGVjdG9yO1xyXG4gIH1cclxuXHJcbiAgZ2V0VXNlckluZm8oKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuYW1lOiB0aGlzLl9uYW1lU2VsZWN0b3IudGV4dENvbnRlbnQsXHJcbiAgICAgIGpvYjogdGhpcy5fam9iU2VsZWN0b3IudGV4dENvbnRlbnQsXHJcbiAgICB9O1xyXG4gIH1cclxuXHJcbiAgc2V0VXNlckluZm8oKSB7XHJcbiAgICB0aGlzLl9uYW1lU2VsZWN0b3IudGV4dENvbnRlbnQgPVxyXG4gICAgICB0aGlzLl9wb3B1cFNlbGVjdG9yLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X25hbWVcIikudmFsdWU7XHJcbiAgICB0aGlzLl9qb2JTZWxlY3Rvci50ZXh0Q29udGVudCA9IHRoaXMuX3BvcHVwU2VsZWN0b3IucXVlcnlTZWxlY3RvcihcclxuICAgICAgXCIucG9wdXBfX2lucHV0X2Fib3V0XCJcclxuICAgICkudmFsdWU7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBcIi4vc3R5bGVzL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgc3RlcHNTcmMgZnJvbSBcIi4vaW1hZ2VzL2F2YXRhci5qcGdcIjtcclxuaW1wb3J0IENhcmQgZnJvbSBcIi4vc2NyaXB0cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBGb3JtVmFsaWRhdG9yIGZyb20gXCIuL3NjcmlwdHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi9zY3JpcHRzL1NlY3Rpb24uanNcIjtcclxuaW1wb3J0IFBvcHVwIGZyb20gXCIuL3NjcmlwdHMvUG9wdXAuanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aENvbmZpcm1hdGlvbiBmcm9tIFwiLi9zY3JpcHRzL1BvcHVwV2l0aENvbmZpcm1hdGlvbi5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tIFwiLi9zY3JpcHRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gXCIuL3NjcmlwdHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFVzZXJJbmZvIGZyb20gXCIuL3NjcmlwdHMvVXNlckluZm8uanNcIjtcclxuXHJcbmNvbnN0IGltYWdlUHJvZmlsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvZmlsZS1hdmF0YXJcIik7XHJcbmltYWdlUHJvZmlsZS5zcmMgPSBzdGVwc1NyYztcclxuY29uc3QgcHJvZmlsZU5hbWVFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19uYW1lXCIpO1xyXG5jb25zdCBwcm9maWxlQWJvdXRFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19hYm91dFwiKTtcclxuY29uc3QgcHJvZmlsZUVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xyXG5jb25zdCBlZGl0UG9wdXBFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cFwiKTtcclxuY29uc3QgZm9ybUVsZW1lbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xyXG5jb25zdCBmb3JtRWxlbWVudENhcmQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvcm0tY2FyZHNcIik7XHJcbmNvbnN0IG5hbWVJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2lucHV0X25hbWVcIik7XHJcbmNvbnN0IGFib3V0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF9hYm91dFwiKTtcclxuXHJcbmNvbnN0IHByb2ZpbGVBZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2FkZC1idXR0b25cIik7XHJcbmNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19pbnB1dF90aXRsZVwiKTtcclxuY29uc3QgaW1hZ2VJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9wdXBfX2lucHV0X2ltYWdlXCIpO1xyXG5cclxuY29uc3QgY2FyZEFyZWEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzXCIpO1xyXG5jb25zdCBncm91cEltYWdlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhZGQtaW1hZ2UtcG9wdXBcIik7XHJcbmNvbnN0IGZvcm1DYXJkID0gZ3JvdXBJbWFnZS5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19mb3JtXCIpO1xyXG5cclxuY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiTW9udGHDsWFzIFJvY29zYXNcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1OTUxMzQ4MTY4MjYtYzU2OWNiYjYwMmIyP3E9ODAmdz0xNDM2JmF1dG89Zm9ybWF0JmZpdD1jcm9wJml4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRFwiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTU4MTUyMDczNDYxOS04NmZiZDBhM2QwODM/cT04MCZ3PTEzNzQmYXV0bz1mb3JtYXQmZml0PWNyb3AmaXhsaWI9cmItNC4wLjMmaXhpZD1NM3d4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh4OGZBJTNEJTNEXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIllvc2VtaXRlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vaW1hZ2VzLnVuc3BsYXNoLmNvbS9waG90by0xNjA3NDAwMzcxMzg4LTE0ZWE5OWQ3ZDA5Nj9xPTgwJnc9MTQ3MCZhdXRvPWZvcm1hdCZmaXQ9Y3JvcCZpeGxpYj1yYi00LjAuMyZpeGlkPU0zd3hNakEzZkRCOE1IeHdhRzkwYnkxd1lXZGxmSHg4ZkdWdWZEQjhmSHg4ZkElM0QlM0RcIixcclxuICB9LFxyXG4gIHtcclxuICAgIG5hbWU6IFwiRXZlcmdsYWRlc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTU5Mjk0NzQxOTA5NS00YTJiNGJkZTkxNjE/cT04MCZ3PTE0NjImYXV0bz1mb3JtYXQmZml0PWNyb3AmaXhsaWI9cmItNC4wLjMmaXhpZD1NM3d4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh4OGZBJTNEJTNEXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkhhd8OhaVwiLFxyXG4gICAgbGluazogXCJodHRwczovL2ltYWdlcy51bnNwbGFzaC5jb20vcGhvdG8tMTU0MjMwOTE3NC1kMzNiMzRjZTZlYTc/cT04MCZ3PTEzNzYmYXV0bz1mb3JtYXQmZml0PWNyb3AmaXhsaWI9cmItNC4wLjMmaXhpZD1NM3d4TWpBM2ZEQjhNSHh3YUc5MGJ5MXdZV2RsZkh4OGZHVnVmREI4Zkh4OGZBJTNEJTNEXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhZ28gTWljaGlnYW5cIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9pbWFnZXMudW5zcGxhc2guY29tL3Bob3RvLTE1NjI4NzgzNDQtODVmN2I2MjQzYzVmP3E9ODAmdz0xMzc0JmF1dG89Zm9ybWF0JmZpdD1jcm9wJml4bGliPXJiLTQuMC4zJml4aWQ9TTN3eE1qQTNmREI4TUh4d2FHOTBieTF3WVdkbGZIeDhmR1Z1ZkRCOGZIeDhmQSUzRCUzRFwiLFxyXG4gIH0sXHJcbl07XHJcblxyXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyhcclxuICB7XHJcbiAgICBuYW1lU2VsZWN0b3I6IHByb2ZpbGVOYW1lRWxlbWVudCxcclxuICAgIGpvYlNlbGVjdG9yOiBwcm9maWxlQWJvdXRFbGVtZW50LFxyXG4gIH0sXHJcbiAgZWRpdFBvcHVwRWxlbWVudFxyXG4pO1xyXG5cclxuZnVuY3Rpb24gc2V0VXNlckluZm8oKSB7XHJcbiAgY29uc3QgeyBuYW1lLCBqb2IgfSA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgbmFtZUlucHV0LnZhbHVlID0gbmFtZTtcclxuICBhYm91dElucHV0LnZhbHVlID0gam9iO1xyXG59XHJcblxyXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oXHJcbiAge1xyXG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcclxuICAgIHJlbmRlcmVyOiAoaXRlbSkgPT4ge1xyXG4gICAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoaXRlbSwgXCIudGVtcGxhdGUtY2FyZFwiKTtcclxuICAgICAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gICAgICBzZWN0aW9uLmFkZEl0ZW0oY2FyZEVsZW1lbnQpO1xyXG4gICAgfSxcclxuICB9LFxyXG4gIGNhcmRBcmVhXHJcbik7XHJcblxyXG5zZWN0aW9uLnJlbmRlcigpO1xyXG5cclxuY29uc3QgZWRpdFBvcHVwID0gbmV3IFBvcHVwKFwiLnBvcHVwXCIpO1xyXG5cclxuY29uc3QgYWRkSW1hZ2VQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxyXG4gIFwiI2FkZC1pbWFnZS1wb3B1cFwiLFxyXG4gIGhhbmRsZUFkZEltYWdlRm9ybVN1Ym1pdFxyXG4pO1xyXG5cclxuY29uc3QgZWRpdFByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFwiLnBvcHVwXCIsIGhhbmRsZVByb2ZpbGVGb3JtU3VibWl0KTtcclxuXHJcbmNvbnN0IGltYWdlUG9wdXAgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXCIjcG9wdXBfaW1hZ2Utb3BlblwiKTtcclxuXHJcbmNvbnN0IG92ZXJsYXlFZGl0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwb3B1cC1vdmVybGF5LWVkaXRcIik7XHJcbmNvbnN0IG92ZXJsYXlBZGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwLW92ZXJsYXktYWRkXCIpO1xyXG5jb25zdCBvdmVybGF5SW1hZ2UgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BvcHVwLW92ZXJsYXktaW1hZ2VcIik7XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdChldnQpIHtcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICB1c2VySW5mby5zZXRVc2VySW5mbygpO1xyXG4gIGVkaXRQcm9maWxlUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkSW1hZ2VGb3JtU3VibWl0KGV2dCkge1xyXG4gIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIGFkZEltYWdlUG9wdXAuY2xvc2UoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdChldnQpIHtcclxuICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICBpZiAodGl0bGVJbnB1dC52YWx1ZSAmJiBpbWFnZUlucHV0LnZhbHVlKSB7XHJcbiAgICBjb25zdCBjYXJkID0gbmV3IENhcmQoXHJcbiAgICAgIHsgbmFtZTogdGl0bGVJbnB1dC52YWx1ZSwgbGluazogaW1hZ2VJbnB1dC52YWx1ZSB9LFxyXG4gICAgICBcIi50ZW1wbGF0ZS1jYXJkXCJcclxuICAgICk7XHJcbiAgICBjb25zdCBuZXdDYXJkRWxlbWVudCA9IGNhcmQuZ2VuZXJhdGVDYXJkKCk7XHJcbiAgICBjYXJkQXJlYS5wcmVwZW5kKG5ld0NhcmRFbGVtZW50KTtcclxuICAgIHRpdGxlSW5wdXQudmFsdWUgPSBcIlwiO1xyXG4gICAgaW1hZ2VJbnB1dC52YWx1ZSA9IFwiXCI7XHJcbiAgICBhZGRJbWFnZVBvcHVwLmNsb3NlKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVPdmVybGF5Q2xpY2soZXZlbnQpIHtcclxuICBpZiAoZXZlbnQudGFyZ2V0LmNsYXNzTGlzdC5jb250YWlucyhcInBvcHVwX19vdmVybGF5XCIpKSB7XHJcbiAgICBlZGl0UG9wdXAuY2xvc2UoKTtcclxuICAgIGFkZEltYWdlUG9wdXAuY2xvc2UoKTtcclxuICAgIGltYWdlUG9wdXAuY2xvc2UoKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNsb3NlUG9wdXBzKCkge1xyXG4gIGVkaXRQb3B1cC5jbG9zZSgpO1xyXG4gIGFkZEltYWdlUG9wdXAuY2xvc2UoKTtcclxuICBpbWFnZVBvcHVwLmNsb3NlKCk7XHJcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VXaXRoRXNjKTtcclxufVxyXG5cclxuZnVuY3Rpb24gY2xvc2VXaXRoRXNjKGV2ZW50KSB7XHJcbiAgaWYgKGV2ZW50LmtleSA9PT0gXCJFc2NhcGVcIikge1xyXG4gICAgY2xvc2VQb3B1cHMoKTtcclxuICB9XHJcbn1cclxuXHJcbnByb2ZpbGVFZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgZWRpdFBvcHVwLm9wZW4oKTtcclxuICBzZXRVc2VySW5mbygpO1xyXG59KTtcclxuXHJcbmZvcm1FbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlUHJvZmlsZUZvcm1TdWJtaXQpO1xyXG5cclxucHJvZmlsZUFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gYWRkSW1hZ2VQb3B1cC5vcGVuKCkpO1xyXG5cclxuZm9ybUNhcmQuYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVBZGRDYXJkU3VibWl0KTtcclxuXHJcbmFkZEltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbm92ZXJsYXlFZGl0LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVPdmVybGF5Q2xpY2spO1xyXG5vdmVybGF5QWRkLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBoYW5kbGVPdmVybGF5Q2xpY2spO1xyXG5vdmVybGF5SW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGhhbmRsZU92ZXJsYXlDbGljayk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCAoZXZlbnQpID0+IGNsb3NlV2l0aEVzYyhldmVudCkpO1xyXG5cclxuY29uc3Qgc2V0dGluZ3MgPSB7XHJcbiAgZm9ybVNlbGVjdG9yOiBcIi5wb3B1cF9fZm9ybVwiLFxyXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxyXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5wb3B1cF9fc2F2ZS1idXR0b25cIixcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcInBvcHVwX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yQ2xhc3M6IFwicG9wdXBfX2lucHV0X3R5cGVfZXJyb3JcIixcclxuICBlcnJvckNsYXNzOiBcInBvcHVwX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcblxyXG5jb25zdCB2YWxpZGF0ZUZvcm1Qcm9maWxlID0gbmV3IEZvcm1WYWxpZGF0b3IoZm9ybUVsZW1lbnQsIHNldHRpbmdzKTtcclxudmFsaWRhdGVGb3JtUHJvZmlsZS5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuY29uc3QgdmFsaWRhdGVGb3JtQ2FyZCA9IG5ldyBGb3JtVmFsaWRhdG9yKGZvcm1FbGVtZW50Q2FyZCwgc2V0dGluZ3MpO1xyXG52YWxpZGF0ZUZvcm1DYXJkLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNhcmREYXRhIiwidGVtcGxhdGVTZWxlY3RvciIsImhhbmRsZU9wZW5JbWFnZSIsIl9jbGFzc0NhbGxDaGVjayIsInRoaXMiLCJfdGl0bGUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfZWxlbWVudCIsIl9nZXRUZW1wbGF0ZSIsIl9jYXJkSW1hZ2UiLCJxdWVyeVNlbGVjdG9yIiwiX2NhcmRUaXRsZSIsIl9saWtlQnV0dG9uIiwiX2RlbGV0ZUJ1dHRvbiIsIl9iaW5kTGlzdGVuZXJzIiwiX2hhbmRsZU9wZW5JbWFnZSIsImtleSIsInZhbHVlIiwiZG9jdW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX3RoaXMiLCJhZGRFdmVudExpc3RlbmVyIiwiX2hhbmRsZUxpa2UiLCJfaGFuZGxlRGVsZXRlIiwiX2hhbmRsZUltYWdlQ2xpY2siLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJyZW1vdmUiLCJfdGhpczIiLCJwb3B1cEltYWdlT3BlbiIsImNsb3NlSW1hZ2UiLCJwb3B1cEltYWdlVGl0bGUiLCJwb3B1cEltYWdlIiwib3ZlcmxheUltYWdlIiwic3JjIiwidGV4dENvbnRlbnQiLCJhbHQiLCJhZGQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiX2hhbmRsZU92ZXJsYXlDbGljayIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtRWxlbWVudCIsInNldHRpbmdzIiwiX2Zvcm1FbGVtZW50IiwiX2Zvcm1TZWxlY3RvciIsImZvcm1TZWxlY3RvciIsIl9pbnB1dFNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsIl9zdWJtaXRCdXR0b25TZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiX2lucHV0RXJyb3JDbGFzcyIsImlucHV0RXJyb3JDbGFzcyIsIl9lcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsIl9idXR0b25FbGVtZW50IiwiaW5wdXRMaXN0IiwiQXJyYXkiLCJmcm9tIiwicXVlcnlTZWxlY3RvckFsbCIsIl9zZXRFdmVudExpc3RlbmVycyIsImlucHV0RWxlbWVudCIsImVycm9yTWVzc2FnZSIsImNvbmNhdCIsImlkIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9oaWRlSW5wdXRFcnJvciIsIl9zaG93SW5wdXRFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwic29tZSIsIl9oYXNJbnZhbGlkSW5wdXQiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsImZvckVhY2giLCJlbCIsIl9jaGVja0lucHV0VmFsaWRpdHkiLCJfdG9nZ2xlQnV0dG9uU3RhdGUiLCJTZWN0aW9uIiwiX3JlZiIsImNhcmRzU2VsZWN0b3IiLCJpdGVtcyIsInJlbmRlcmVyIiwiX2l0ZW1zIiwiX3JlbmRlcmVyIiwiX2NhcmRzU2VsZWN0b3IiLCJpdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJQb3B1cCIsInBvcHVwU2VsZWN0b3IiLCJwb3B1cENsb3NlQnV0dG9uIiwiX2hhbmRsZUVzY0Nsb3NlIiwiYmluZCIsImNsb3NlIiwidGFyZ2V0IiwiY29udGFpbnMiLCJQb3B1cFdpdGhGb3JtIiwiX1BvcHVwIiwiaGFuZGxlRm9ybVN1Ym1pdCIsIl9jYWxsU3VwZXIiLCJmb3JtIiwiX2luaGVyaXRzIiwiX2dldCIsIl9nZXRQcm90b3R5cGVPZiIsInByb3RvdHlwZSIsImNhbGwiLCJyZXNldCIsIlBvcHVwV2l0aEltYWdlIiwiaW1hZ2UiLCJ0aXRsZSIsImltYWdlU3JjIiwidGl0bGVUZXh0IiwiVXNlckluZm8iLCJuYW1lU2VsZWN0b3IiLCJqb2JTZWxlY3RvciIsIl9uYW1lU2VsZWN0b3IiLCJfam9iU2VsZWN0b3IiLCJfcG9wdXBTZWxlY3RvciIsImpvYiIsImdldEVsZW1lbnRCeUlkIiwicHJvZmlsZU5hbWVFbGVtZW50IiwicHJvZmlsZUFib3V0RWxlbWVudCIsInByb2ZpbGVFZGl0QnV0dG9uIiwiZWRpdFBvcHVwRWxlbWVudCIsImZvcm1FbGVtZW50Q2FyZCIsIm5hbWVJbnB1dCIsImFib3V0SW5wdXQiLCJwcm9maWxlQWRkQnV0dG9uIiwidGl0bGVJbnB1dCIsImltYWdlSW5wdXQiLCJjYXJkQXJlYSIsImZvcm1DYXJkIiwidXNlckluZm8iLCJzZWN0aW9uIiwiY2FyZEVsZW1lbnQiLCJnZW5lcmF0ZUNhcmQiLCJhZGRJdGVtIiwicmVuZGVyIiwiZWRpdFBvcHVwIiwiYWRkSW1hZ2VQb3B1cCIsImVkaXRQcm9maWxlUG9wdXAiLCJoYW5kbGVQcm9maWxlRm9ybVN1Ym1pdCIsImltYWdlUG9wdXAiLCJvdmVybGF5RWRpdCIsIm92ZXJsYXlBZGQiLCJzZXRVc2VySW5mbyIsImhhbmRsZU92ZXJsYXlDbGljayIsImV2ZW50IiwiY2xvc2VXaXRoRXNjIiwiX3VzZXJJbmZvJGdldFVzZXJJbmZvIiwib3BlbiIsImdldFVzZXJJbmZvIiwibmV3Q2FyZEVsZW1lbnQiLCJzZXRFdmVudExpc3RlbmVycyJdLCJzb3VyY2VSb290IjoiIn0=